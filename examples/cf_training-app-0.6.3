{"Mappings":{"SubnetConfig":{"VPC":{"CIDR":"10.0.0.0/16"},"Public":{"CIDR":"10.0.0.0/24"}}},"Resources":{"ASGFrontend":{"Type":"AWS::AutoScaling::AutoScalingGroup","Properties":{"AvailabilityZones":{"Fn::GetAZs":""},"LaunchConfigurationName":{"Ref":"LCFrontend"},"MinSize":1,"MaxSize":1,"LoadBalancerNames":[{"Ref":"ELBFrontend"}]},"CreationPolicy":{"ResourceSignal":{"Timeout":"PT15M","Count":"1"}},"UpdatePolicy":{"AutoScalingRollingUpdate":{"MinInstancesInService":"1","MaxBatchSize":"1","PauseTime":"PT15M","WaitOnResourceSignals":"true"}}},"ASGBackend":{"Type":"AWS::AutoScaling::AutoScalingGroup","Properties":{"AvailabilityZones":{"Fn::GetAZs":""},"LaunchConfigurationName":{"Ref":"LCBackend"},"MinSize":1,"MaxSize":1,"LoadBalancerNames":[{"Ref":"ELBBackend"}]},"CreationPolicy":{"ResourceSignal":{"Timeout":"PT15M","Count":"1"}},"UpdatePolicy":{"AutoScalingRollingUpdate":{"MinInstancesInService":"1","MaxBatchSize":"1","PauseTime":"PT15M","WaitOnResourceSignals":"true"}}},"ELBFrontend":{"Type":"AWS::ElasticLoadBalancing::LoadBalancer","Properties":{"AvailabilityZones":{"Fn::GetAZs":""},"CrossZone":"true","Listeners":[{"LoadBalancerPort":"80","InstancePort":"80","Protocol":"HTTP"}],"HealthCheck":{"Target":"HTTP:80/","HealthyThreshold":"3","UnhealthyThreshold":"5","Interval":"30","Timeout":"5"}}},"ELBBackend":{"Type":"AWS::ElasticLoadBalancing::LoadBalancer","Properties":{"AvailabilityZones":{"Fn::GetAZs":""},"CrossZone":"true","Listeners":[{"LoadBalancerPort":"80","InstancePort":"80","Protocol":"HTTP"}],"HealthCheck":{"Target":"HTTP:80/","HealthyThreshold":"3","UnhealthyThreshold":"5","Interval":"30","Timeout":"5"}}},"LCFrontend":{"Type":"AWS::AutoScaling::LaunchConfiguration","Metadata":{"Comment":"Install a simple application","AWS::CloudFormation::Init":{"config":{"packages":{"yum":{}},"files":{},"services":{"sysvinit":{}}}}},"Properties":{"KeyName":{"Ref":"KeyName"},"ImageId":"i-blah","SecurityGroups":[{"ref":"ISGFrontend"},{"ref":"ISGSSH"}],"InstanceType":"t2.micro","UserData":{"Fn::Base64":{"Fn::Join":["",["#!/bin/bash -xe\n","yum update -y aws-cfn-bootstrap\n","chef-solo -j /etc/chef/dna.json -E training\n","/opt/aws/bin/cfn-init -v "," --stack ",{"Ref":"AWS::StackName"}," --resource LaunchConfig "," --region ",{"Ref":"AWS::Region"},"\n","/opt/aws/bin/cfn-signal -e $? "," --stack ",{"Ref":"AWS::StackName"}," --resource WebServerGroup "," --region ",{"Ref":"AWS::Region"},"\n"]]}}}},"LCBackend":{"Type":"AWS::AutoScaling::LaunchConfiguration","Metadata":{"Comment":"Install a simple application","AWS::CloudFormation::Init":{"config":{"packages":{"yum":{}},"files":{},"services":{"sysvinit":{}}}}},"Properties":{"KeyName":{"Ref":"KeyName"},"ImageId":"i-blah","SecurityGroups":[{"ref":"ISGBackend"},{"ref":"SSH"}],"InstanceType":"t2.micro","UserData":{"Fn::Base64":{"Fn::Join":["",["#!/bin/bash -xe\n","yum update -y aws-cfn-bootstrap\n","chef-solo -j /etc/chef/dna.json -E training\n","/opt/aws/bin/cfn-init -v "," --stack ",{"Ref":"AWS::StackName"}," --resource LaunchConfig "," --region ",{"Ref":"AWS::Region"},"\n","/opt/aws/bin/cfn-signal -e $? "," --stack ",{"Ref":"AWS::StackName"}," --resource WebServerGroup "," --region ",{"Ref":"AWS::Region"},"\n"]]}}}},"ISGFrontend":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Allow traffic in from the world on default web port.","SecurityGroupIngress":[{"CidrIp":"0.0.0.0/0","ToPort":"80","FromPort":"80","IpProtocol":"tcp"},{"CidrIp":"0.0.0.0/0","ToPort":"443","FromPort":"443","IpProtocol":"tcp"}],"VpcId":[{"Ref":"VPCId"},[{"CidrIp":"0.0.0.0/0","ToPort":"80","FromPort":"80","IpProtocol":"tcp"},{"CidrIp":"0.0.0.0/0","ToPort":"443","FromPort":"443","IpProtocol":"tcp"}]]}},"ISGBackend":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Only allow traffic from the cool kids in the be group.","SecurityGroupIngress":[{"ToPort":"8080","FromPort":"8080","IpProtocol":"tcp","SourceSecurityGroupName":{"Fn::GetAtt":["ELBFrontend","SourceSecurityGroup.GroupName"]},"SourceSecurityGroupOwnerId":{"Fn::GetAtt":["ELBFrontend","SourceSecurityGroup.OwnerAlias"]}}],"VpcId":[{"Ref":"VPCId"},[{"ToPort":"8080","FromPort":"8080","IpProtocol":"tcp","SourceSecurityGroupName":{"Fn::GetAtt":["ELBFrontend","SourceSecurityGroup.GroupName"]},"SourceSecurityGroupOwnerId":{"Fn::GetAtt":["ELBFrontend","SourceSecurityGroup.OwnerAlias"]}}]]}},"ISGSSH":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"SSH access from within the VPN only.","SecurityGroupIngress":[{"CidrIp":{"Fn::FindInMap":["SubnetConfig","VPC","CIDR"]},"ToPort":"22","FromPort":"22","IpProtocol":"tcp"}],"VpcId":[{"Ref":"VPCId"},"SSH access from within the VPN only."]}}},"Parameters":{"SSHLocation":{"Description":"The IP address range that can be used to SSH to the EC2 instances","Type":"String","MinLength":"9","MaxLength":"18","Default":"0.0.0.0/0","AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})","ConstraintDescription":"must be a valid IP CIDR range of the form x.x.x.x/x."},"VPCId":{"Description":"Name of an existing VPC","Type":"AWS::EC2::VPC::Id","ConstraintDescription":"must be the name of an existing VPC."},"SubnetId":{"Description":"Name of an existing VPC SubnetId","Type":"AWS::EC2::Subnet::Id","ConstraintDescription":"must be the name of an existing VPC subnetId."},"KeyName":{"Description":"Name of an existing EC2 KeyPair to enable SSH access to the web server","Type":"AWS::EC2::KeyPair::KeyName","ConstraintDescription":"must be the name of an existing EC2 KeyPair."},"ChefEnvName":{"Description":"Chef environment name","Type":"String","Default":"training"},"DomainName":{"Description":"Name of the domain we will be using for this.","Type":"String","Default":"krogebry.com"}}}
