{"Mappings":{"SubnetConfig":{"VPC":{"CIDR":"10.0.0.0/16"},"Public":{"CIDR":"10.0.0.0/24"}}},"Resources":{"VPC":{"Type":"AWS::EC2::VPC","Properties":{"EnableDnsSupport":"true","EnableDnsHostnames":"true","CidrBlock":{"Fn::FindInMap":["SubnetConfig","VPC","CIDR"]},"Tags":[{"Key":"Name","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}]}},"PublicSubnet":{"Type":"AWS::EC2::Subnet","Properties":{"VpcId":{"Ref":"VPC"},"CidrBlock":{"Fn::FindInMap":["SubnetConfig","Public","CIDR"]},"Tags":[{"Key":"Name","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}]}},"InternetGateway":{"Type":"AWS::EC2::InternetGateway","Properties":{"Tags":[{"Key":"Name","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}]}},"GatewayToInternet":{"Type":"AWS::EC2::VPCGatewayAttachment","Properties":{"VpcId":{"Ref":"VPC"},"InternetGatewayId":{"Ref":"InternetGateway"}}},"PublicRouteTable":{"Type":"AWS::EC2::RouteTable","Properties":{"VpcId":{"Ref":"VPC"},"Tags":[{"Key":"Name","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}]}},"PublicRoute":{"Type":"AWS::EC2::Route","DependsOn":"GatewayToInternet","Properties":{"RouteTableId":{"Ref":"PublicRouteTable"},"DestinationCidrBlock":"0.0.0.0/0","GatewayId":{"Ref":"InternetGateway"}}},"PublicSubnetRouteTableAssociation":{"Type":"AWS::EC2::SubnetRouteTableAssociation","Properties":{"SubnetId":{"Ref":"PublicSubnet"},"RouteTableId":{"Ref":"PublicRouteTable"}}},"PublicNetworkAcl":{"Type":"AWS::EC2::NetworkAcl","Properties":{"VpcId":{"Ref":"VPC"},"Tags":[{"Key":"Name","Value":{"Ref":"AWS::StackName"}},{"Key":"Network","Value":"Public"}]}},"InboundHTTPPublicNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"NetworkAclId":{"Ref":"PublicNetworkAcl"},"RuleNumber":"100","Protocol":"6","RuleAction":"allow","Egress":"false","CidrBlock":"0.0.0.0/0","PortRange":{"From":"80","To":"80"}}},"InboundHTTPSPublicNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"NetworkAclId":{"Ref":"PublicNetworkAcl"},"RuleNumber":"101","Protocol":"6","RuleAction":"allow","Egress":"false","CidrBlock":"0.0.0.0/0","PortRange":{"From":"443","To":"443"}}},"InboundSSHPublicNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"NetworkAclId":{"Ref":"PublicNetworkAcl"},"RuleNumber":"102","Protocol":"6","RuleAction":"allow","Egress":"false","CidrBlock":{"Ref":"SSHLocation"},"PortRange":{"From":"22","To":"22"}}},"InboundEphemeralPublicNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"NetworkAclId":{"Ref":"PublicNetworkAcl"},"RuleNumber":"103","Protocol":"6","RuleAction":"allow","Egress":"false","CidrBlock":"0.0.0.0/0","PortRange":{"From":"1024","To":"65535"}}},"OutboundPublicNetworkAclEntry":{"Type":"AWS::EC2::NetworkAclEntry","Properties":{"NetworkAclId":{"Ref":"PublicNetworkAcl"},"RuleNumber":"100","Protocol":"6","RuleAction":"allow","Egress":"true","CidrBlock":"0.0.0.0/0","PortRange":{"From":"0","To":"65535"}}},"PublicSubnetNetworkAclAssociation":{"Type":"AWS::EC2::SubnetNetworkAclAssociation","Properties":{"SubnetId":{"Ref":"PublicSubnet"},"NetworkAclId":{"Ref":"PublicNetworkAcl"}}},"WebServerGroup":{"Type":"AWS::AutoScaling::AutoScalingGroup","Properties":{"LaunchConfigurationName":{"Ref":"LC"},"MinSize":1,"MaxSize":1,"VPCZoneIdentifier":{"Ref":"SubnetIds"},"Tags":[{"Key":"Name","Value":"bastion-0.7.13","PropagateAtLaunch":true}],"AvailabilityZones":{"Ref":"AZs"}},"UpdatePolicy":{"AutoScalingRollingUpdate":{"MinInstancesInService":"1","MaxBatchSize":"1","PauseTime":"PT15M","WaitOnResourceSignals":"true"}}},"ASG":{"Type":"AWS::AutoScaling::AutoScalingGroup","Properties":{"LaunchConfigurationName":{"Ref":"LC"},"MinSize":1,"MaxSize":1,"VPCZoneIdentifier":{"Ref":"SubnetIds"},"Tags":[{"Key":"Name","Value":"bastion-0.7.13","PropagateAtLaunch":true}],"AvailabilityZones":{"Ref":"AZs"}},"UpdatePolicy":{"AutoScalingRollingUpdate":{"MinInstancesInService":"1","MaxBatchSize":"1","PauseTime":"PT15M","WaitOnResourceSignals":"true"}}},"LaunchConfig":{"Type":"AWS::AutoScaling::LaunchConfiguration","Metadata":{"Comment":"Install a simple application","AWS::CloudFormation::Init":{"config":{"packages":{"yum":{}},"files":{},"services":{"sysvinit":{}}}}},"Properties":{"KeyName":{"Ref":"KeyName"},"ImageId":{"Ref":"ImageId"},"SecurityGroups":[{"Ref":"ISGSSH"}],"InstanceType":"t2.micro","UserData":{"Fn::Base64":{"Fn::Join":["",["#!/bin/bash -xe\n","yum update -y aws-cfn-bootstrap\n"]]}},"AssociatePublicIpAddress":true}},"LC":{"Type":"AWS::AutoScaling::LaunchConfiguration","Metadata":{"Comment":"Install a simple application","AWS::CloudFormation::Init":{"config":{"packages":{"yum":{}},"files":{},"services":{"sysvinit":{}}}}},"Properties":{"KeyName":{"Ref":"KeyName"},"ImageId":{"Ref":"ImageId"},"SecurityGroups":[{"Ref":"ISGSSH"}],"InstanceType":"t2.micro","UserData":{"Fn::Base64":{"Fn::Join":["",["#!/bin/bash -xe\n","yum update -y aws-cfn-bootstrap\n"]]}},"AssociatePublicIpAddress":true}},"InstanceSecurityGroup":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"SSH access from within the VPN only.","SecurityGroupIngress":[{"CidrIp":{"Fn::FindInMap":["SubnetConfig","VPC","CIDR"]},"ToPort":"22","FromPort":"22","IpProtocol":"tcp"}],"VpcId":{"Ref":"VPC"}}},"ISGSSH":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"SSH access from within the VPN only.","SecurityGroupIngress":[{"CidrIp":{"Fn::FindInMap":["SubnetConfig","VPC","CIDR"]},"ToPort":"22","FromPort":"22","IpProtocol":"tcp"}],"VpcId":{"Ref":"VPC"}}}},"Parameters":{"SSHLocation":{"Description":"The IP address range that can be used to SSH to the EC2 instances","Type":"String","MinLength":"9","MaxLength":"18","Default":"0.0.0.0/0","AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})","ConstraintDescription":"must be a valid IP CIDR range of the form x.x.x.x/x."},"ChefEnvName":{"Description":"Chef environment name","Type":"String","Default":"training"},"DomainName":{"Description":"Name of the domain we will be using for this.","Type":"String","Default":"krogebry.com"},"KeyName":{"Description":"Name of an existing EC2 KeyPair to enable SSH access to the web server","Type":"AWS::EC2::KeyPair::KeyName","ConstraintDescription":"must be the name of an existing EC2 KeyPair."},"ImageId":{"Description":"ImageId","Type":"AWS::EC2::Image::Id","ConstraintDescription":"Must be an ami id."},"AZs":{"Type":"CommaDelimitedList","Description":"List of AZs to use."},"SubnetIds":{"Type":"List<AWS::EC2::Subnet::Id>","Description":"The list of SubnetIds in your Virtual Private Cloud (VPC)","ConstraintDescription":"must be a list of an existing subnets in the selected Virtual Private Cloud."}}}
